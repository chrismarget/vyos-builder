{
  "variables": {
    "home_dir": "{{ env `HOME` }}",
    "build_dir": "build",
    "web_dir": "webroot",
    "build_container": "false",
    "container_tag": "crux",
    "preseed": "preseed.cfg",
    "time": "{{ isotime \"20060102-150405\"}}",
    "vm_name": "vyos-builder",
    "version": "0.0.1",
    "vyos_arch": "amd64",
    "vyos_version": "1.2.4",
    "vyos_build_target": "vmware",
    "vyos_build_by": "{{ env `USER` }}",
    "vyos_src": "https://github.com/vyos/vyos-build",
    "vyos_user": "vyos",
    "custom_pkgs": "tcpdump"
  },
  "builders": [
    {
      "type": "virtualbox-iso",
      "vm_name": "{{ user `vm_name` }}_{{ user `version` }}-{{ user `time` }}",
      "output_directory": "{{ user `build_dir` }}-{{ user `time` }}",
      "disk_size": "100000",
      "guest_additions_mode": "disable",
      "guest_os_type": "Ubuntu_64",
      "hard_drive_interface": "sata",
      "headless": "false",
      "iso_urls": [
        "http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.4-server-amd64.iso"
      ],
      "iso_checksum": "e2ecdace33c939527cbc9e8d23576381c493b071107207d2040af72595f8990b",
      "http_directory": "{{ user `web_dir` }}",
      "boot_wait": "5s",
      "boot_command": [
        "<esc><esc><enter>",
        "/install/vmlinuz",
        " initrd=/install/initrd.gz",
        " auto",
        " debconf/priority=critical",
        " locale=en_US",
        " netcfg/get_hostname={{ user `vm_name` }}-{{ user `time` }}",
        " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg",
        " PACKER_SSH_PUBLIC_KEY=\"{{ .SSHPublicKey }}\"",
        "<enter>"
      ],
      "ssh_username": "root",
      "ssh_wait_timeout": "10000s",
      "shutdown_command": "shutdown -P now",
      "vboxmanage": [
        [ "modifyvm", "{{.Name}}", "--memory", "2048" ],
        [ "modifyvm", "{{.Name}}", "--cpus", "2" ],
        [ "modifyvm", "{{.Name}}", "--paravirtprovider", "default" ],
        [ "modifyvm", "{{.Name}}", "--nictype1", "virtio" ],
        [ "storageattach", "{{.Name}}", "--storagectl", "SATA Controller", "--port", "1", "--device", "0", "--type", "dvddrive", "--medium", "emptydrive" ]
      ]
    }
  ],
  "provisioners": [
    {
      "type": "file",
      "source": "{{ user `home_dir` }}/.ssh/id_rsa.pub",
      "destination": "/tmp/authorized_keys"
    },
    {
      "type": "shell",
      "inline": [
        "# This provisioner, with the one above, copies the user's public key into the resulting VM.",
        "# It's not strictly required, but handy to have because it streamlines access to the VM for",
        "# debugging purposes. This is one of 3 SSH keys that gets used within the VM. In all we have:",
        "# - The ephemeral key used by packer. You can see it get typed in on the kernel command line",
        "#   as the build VM boots for the first time. The preseed file installs it, and packer removes",
        "#   it at the end of the build",
        "# - This key, pulled from the user's home directory (your home directory)",
        "# - A key created *on* the VM (in a ramdisk so it's never written to block storage) and trusted",
        "#   by the VM. This key is exported by a file provisioner below, and stored alongside the .ovf",
        "#   and .vmdk files. Use it if you need to access the VM again in the future after packer exits.",
        "#",
        "# This provisioner and the one above are purely for convenience, can be removed without affecting",
        "# they vyos build.",
        "cat /tmp/authorized_keys >> /root/.ssh/authorized_keys"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "# This provisioner creates an ssh key (in a ramdisk) and causes the root user to trust that key.",
        "# The key will be exported to the build directory by the next provisioner below. It is not",
        "# required, but rather exists to facilitate access to the VM should you find a need to boot it",
        "# up after the initial vyos creation. These two provisioners can be safely removed.",
        "mkdir /tmp/ramdisk",
        "mount -t tmpfs -o size=1m tmpfs /tmp/ramdisk",
        "ssh-keygen -t rsa -f /tmp/ramdisk/id_rsa -P ''",
        "cat /tmp/ramdisk/id_rsa.pub >> /root/.ssh/authorized_keys"
      ]
    },
    {
      "type": "file",
      "direction": "download",
      "source": "/tmp/ramdisk/id_rsa",
      "destination": "{{ user `build_dir` }}-{{ user `time` }}/{{ user `vm_name` }}_{{ user `version` }}-{{ user `time` }}.sshkey"
    },
    {
      "type": "shell",
      "inline": [
        "curl http://$PACKER_HTTP_ADDR/docker.gpg | apt-key add -",
        "add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"",
        "apt-get update -y",
        "apt-get install -y docker-ce"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "useradd -ms /bin/bash -G docker {{ user `vyos_user` }}",
        "tar -C $HOME -cf - .ssh/authorized_keys | su -c 'tar -C $HOME -xvf -' {{ user `vyos_user` }}"
      ]
    },
    {
      "type": "shell",
      "environment_vars":["TIMESTAMP={{ user `time` }}"],
      "inline": [
        "# This provisioner populates the build_vyos.env file, and then calls the build_vyos.sh script.",
        "#",
        "# The env file exists to telegraph variables from the packer configuration into the build",
        "# environment in a way that facilitates re-use (re-run build_vyos.sh) without running packer",
        "# again.",
        "#",
        "# The quote escaping for custom_pkgs is gnarly. 0x22 is a double-quote character.",
        "su -c 'echo \"BUILD_CONTAINER={{ user `build_container` }}\"         >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'echo \"CONTAINER_TAG={{ user `container_tag` }}\"             >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'echo \"ARCH={{ user `vyos_arch` }}\"                          >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'echo \"BUILD_BY={{ user `vyos_build_by` }}\"                  >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'echo \"VYOS_SRC={{ user `vyos_src` }}\"                       >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'echo \"VYOS_VER={{ user `vyos_version` }}\"                   >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'echo \"VYOS_TARGET={{ user `vyos_build_target` }}\"           >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'echo \"BUILD_DIR={{ user `build_dir` }}\"                     >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'echo -e \"CUSTOM_PKGS=\\x22{{ user `custom_pkgs` }}\\x22\"    >> $HOME/build_vyos.env' {{ user `vyos_user` }}",
        "su -c 'curl -o $HOME/build_vyos.sh http://$PACKER_HTTP_ADDR/build_vyos.sh' {{ user `vyos_user` }}",
        "su -c 'chmod 755 $HOME/build_vyos.sh' {{ user `vyos_user` }}",
        "su -c '${HOME}/build_vyos.sh' {{ user `vyos_user` }}"
      ]
    },
    {
      "type": "file",
      "direction": "download",
      "source": "/home/{{ user `vyos_user` }}/{{ user `build_dir` }}-{{user `time` }}/",
      "destination": "{{ user `build_dir` }}-{{ user `time` }}/"
    }
  ]
}
